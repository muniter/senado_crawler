name: Generate Data

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16


      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm ci

      - name: Refresh Lista
        run: |
          npm run refresh -- --cuatrenio "2022-2026" --legislatura "2022-2023" --tipo lista

      - name: Refresh Detalles
        if: false
        run: |
          npm run refresh -- --cuatrenio "2022-2026" --legislatura "2022-2023" --tipo detalle

      - name: Execute SQLite Query
        run: |
          sqlite3 prisma/dev.db -cmd '.mode csv' -cmd '.headers on'  < db/report_query.sql > data.csv
      - name: Set up git config
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Check if there's changes
        run: |
          if [[ -z $(git status -s) ]]; then
            echo "No changes to commit"
            echo "CHANGES=false" >> $GITHUB_STATE
          else
            echo "There are changes"
            echo "CHANGES=true" >> $GITHUB_STATE
          fi

      - name: Commit data
        if: steps.CHANGES.outputs.CHANGES == 'true'
        run: |
          git add data.csv
          git add prisma/dev.db
          git commit -m "Update data"
          git push
